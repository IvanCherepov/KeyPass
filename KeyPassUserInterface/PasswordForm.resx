<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IiAIiIAiIgCIiAIiID//2Q==
</value>
  </data>
</root>